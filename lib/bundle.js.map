{"version":3,"sources":["webpack:///webpack/bootstrap 826fe6e83cb4b676c85f","webpack:///./lib/genetic_algorithm/sketch.js","webpack:///./lib/genetic_algorithm/DNA.js","webpack:///./lib/genetic_algorithm/population.js","webpack:///./lib/trip_planner.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AChEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE;AACA;AACA;AACA;AACA,gBAAgB;AAChB,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;ACnFA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA,iCAAiC,UAAU;AAC3C;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACvGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,OAAO,sBAAsB;AACpC;AACA;;AAEA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AClEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA,uBAAuB,eAAe,GAAG,eAAe;AACxD;AACA;AACA,wBAAwB,oBAAoB;AAC5C,yBAAyB,UAAU;AACnC,uBAAuB,eAAe,GAAG,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4BAA4B;AAC1E,8CAA8C,+BAA+B;AAC7E,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,kBAAkB,QAAQ,WAAW,QAAQ;AAC7C;AACA;AACA;AACA;AACA,kBAAkB,MAAM,SAAS,QAAQ;AACzC;;AAEA;AACA;AACA;AACA,kBAAkB,KAAK,QAAQ,MAAM,SAAS,QAAQ;AACtD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 826fe6e83cb4b676c85f","import Population from './population.js';\n\n// The Nature of Code\n// Daniel Shiffman\n// http://natureofcode.com\n\n// Genetic Algorithm, Evolving Shakespeare\n\n// Demonstration of using a genetic algorithm to perform a search\n\n// setup()\n//  # Step 1: The Population\n//    # Create an empty population (an array or ArrayList)\n//    # Fill it with DNA encoded objects (pick random values to start)\n\n// draw()\n//  # Step 1: Selection\n//    # Create an empty mating pool (an empty ArrayList)\n//    # For every member of the population, evaluate its fitness based on some criteria / function,\n//      and add it to the mating pool in a manner consistant with its fitness, i.e. the more fit it\n//      is the more times it appears in the mating pool, in order to be more likely picked for reproduction.\n\n//  # Step 2: Reproduction Create a new empty population\n//    # Fill the new population by executing the following steps:\n//       1. Pick two \"parent\" objects from the mating pool.\n//       2. Crossover -- create a \"child\" object by mating these two parents.\n//       3. Mutation -- mutate the child's DNA based on a given probability.\n//       4. Add the child object to the new population.\n//    # Replace the old population with the new population\n//\n//   # Rinse and repeat\n\nclass GeneticAlgorithm {\n  constructor(destinations, tours, maxGeneration = 50, map) {\n    this.destinations = destinations;\n    this.population;\n    this.tours = tours;\n    this.maxGeneration = maxGeneration;\n    this.map = map;\n    this.polyLine;\n  }\n\n  setup() {\n    let popSize = parseInt(document.getElementsByClassName(\"population\")[0].value);\n    this.population = new Population(this.destinations, this.tours, popSize);\n  }\n\n  draw(completedCallback) {\n    this.population.calcFitness();\n    let drawInterval = setInterval(() => {\n      let gen = document.getElementsByClassName(\"gen\")[0];\n      this.population.generate();\n      gen.innerHTML = `Generation: ${this.population.generations}`;\n      this.population.calcFitness();\n      let fittest = this.population.getFittest();\n      let fittestCoord = fittest.genes.map(destination => {\n        let split = destination.split(\",\");\n        return {lat: parseFloat(split[0]), lng: parseFloat(split[1])};\n      });\n\n      if (this.polyLine != undefined) {\n        this.polyLine.setMap(null);\n      }\n      this.polyLine = new google.maps.Polyline({\n        path: fittestCoord,\n        strokeColor: \"#0066ff\",\n        strokeOpacity: 1.0,\n        strokeWeight: 2\n      });\n      this.polyLine.setMap(this.map);\n\n\n      if (this.population.generations >= this.maxGeneration) {\n        clearInterval(drawInterval);\n        this.polyLine.setMap(null);\n        if (completedCallback) {\n          completedCallback(this.population.getFittest());\n        }\n      }\n    }, 60);\n  }\n}\n\nexport default GeneticAlgorithm;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/genetic_algorithm/sketch.js\n// module id = 0\n// module chunks = 0","Array.prototype.shuffle = function() {\n  let counter = this.length - 1;\n\n  // While there are elements in the array\n  while (counter > 1) {\n      // Pick a random index\n      let index = Math.floor(Math.random() * (this.length - 2) + 1);\n\n      // Decrease counter by 1\n      counter--;\n\n      // And swap the last element with it\n      [this[counter], this[index]] = [this[index], this[counter]];\n  }\n\n  return this;\n};\n\nclass DNA {\n  constructor(destinations, shuffle = true) {\n    this.genes = [];\n    this.fitness = 0;\n    this.duration = 0;\n    this.distance = 0;\n    for (let i = 0; i < destinations.length; i++) {\n      this.genes.push(destinations[i]);\n    }\n    if (shuffle) {\n      this.genes.shuffle();\n    }\n  }\n\n  calcFitness(tours) {\n    this.fitness = 0;\n    this.calcDuration(tours);\n    this.fitness = 1 / this.duration;\n  }\n\n  calcDuration(tours) {\n    this.duration = 0;\n    this.distance = 0;\n    for (let i = 0; i < this.genes.length - 1; i++) {\n      let from = this.genes[i];\n      let to = this.genes[i + 1];\n      if (tours[from][to] === undefined) {\n        alert(\"error! try again!\");\n      } else {\n        this.duration += parseFloat(tours[from][to].duration);\n        this.distance += parseFloat(tours[from][to].distance);\n      }\n    }\n  }\n\n  setDNA(destinations) {\n    this.destinations = destinations;\n  }\n\n  crossover(partner) {\n    let child = [];\n    child[0] = this.genes[0];\n    child[this.genes.length - 1] = this.genes[this.genes.length - 1];\n    let startPos = Math.floor(Math.random() * (this.genes.length - 2) + 1);\n    let endPos = Math.floor(Math.random() * (this.genes.length - 2) + 1);\n\n    let i = startPos;\n\n    while (i != endPos) {\n      child[i] = this.genes[i];\n      i++;\n\n      if (i >= this.genes.length) {\n        i = 1;\n      }\n    }\n\n    for (let j = 1; j < partner.genes.length; j++) {\n      let gene = partner.genes[j];\n      if (child.includes(gene)) { continue; }\n      else {\n        for (let k = 0; k < this.genes.length; k++) {\n          if (child[k] === undefined) {\n            child[k] = gene;\n            break;\n          }\n        }\n      }\n    }\n    let dnaChild = new DNA(child, false);\n    return dnaChild;\n  }\n\n  mutate(mutationRate) {\n    for (let i = 1; i < this.genes.length - 1; i++) {\n      if (Math.random() < mutationRate) {\n        let randomIndex = Math.floor(Math.random() * (this.genes.length - 2) + 1);\n        let tempGene = this.genes[randomIndex];\n        this.genes[randomIndex] = this.genes[i];\n        this.genes[i] = tempGene;\n      }\n    }\n  }\n}\n\nexport default DNA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/genetic_algorithm/DNA.js\n// module id = 1\n// module chunks = 0","import DNA from './DNA.js';\n\nclass Population {\n  constructor(destinations, tours, popSize) {\n    this.population = [];\n    this.generations = 0;\n    this.mutateRate = parseFloat(document.getElementsByClassName(\"mutation\")[0].value);\n    this.tours = tours;\n    for (let i = 0; i < popSize; i++) {\n      this.population.push(new DNA(destinations));\n    }\n  }\n\n  //calculate fitness of each element in population\n  calcFitness() {\n    for (let i = 0; i < this.population.length; i++) {\n      this.population[i].calcFitness(this.tours);\n    }\n  }\n\n  acceptReject(maxFitness) {\n    let r = (Math.random() * maxFitness);\n    while (true) {\n      let index = Math.floor(Math.random() * this.population.length);\n      let partner  = this.population[index];\n      if (r < partner.fitness) {\n        return partner;\n      } else { r -= partner.fitness; }\n    }\n  }\n\n  generate() {\n    let maxFitness = 0;\n    for (let i = 0; i < this.population.length; i++) {\n      if (this.population[i].fitness > maxFitness) {\n        maxFitness = this.population[i].fitness;\n      }\n    }\n    let newPopulation = [];\n    for (let j = 0; j< this.population.length; j++) {\n      let partnerA = this.acceptReject(maxFitness);\n      let partnerB = this.acceptReject(maxFitness);\n      let child = partnerA.crossover(partnerB);\n      child.mutate(this.mutateRate);\n      newPopulation[j] = child;\n    }\n    this.population = newPopulation;\n    this.generations += 1;\n  }\n\n  getFittest() {\n    return this.population[this.getFittestIndex()];\n  }\n\n  getFittestIndex() {\n    let fittestIndex = 0;\n\n    for (let i = 0; i < this.population.length; i++) {\n      if (this.population[i].fitness > this.population[fittestIndex].fitness) {\n        fittestIndex = i;\n      }\n    }\n    return fittestIndex;\n  }\n}\n\nexport default Population;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/genetic_algorithm/population.js\n// module id = 2\n// module chunks = 0","import GA from './genetic_algorithm/sketch.js';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n  let markers = [];\n  let destinations = [];\n  let nodes = [];\n  const tours = {};\n  let map;\n  let directionsDisplay = null;\n  let directionsService;\n  let labels = ['1','2','3','4','5','6','7','8','9','10'];\n  let labelIndex = 0;\n\n  //Google Map Set Up\n  function initMap() {\n    let sanFrancisco = { lat: 37.790909, lng: -122.417861 };\n    map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 11,\n      center: sanFrancisco,\n      mapTypeId: google.maps.MapTypeId.TERRAIN\n    });\n\n    //Event Listener to place marks when user clicks on the map\n    map.addListener('click', e => {\n      if (nodes.length > 9) {\n        alert(\"You can only have 10 marks!\");\n      }\n      else {\n        placeMarker(e.latLng, map);\n        nodes.push(e.latLng);\n      }\n    });\n  }\n  //Function to place marks on the map\n  function placeMarker(latLng, map) {\n    let marker = new google.maps.Marker({\n      position: latLng,\n      label: labels[labelIndex++ % labels.length],\n      map: map\n    });\n    markers.push(marker);\n  }\n\n  function getDuration(callback) {\n    let service = new google.maps.DistanceMatrixService();\n\n    let travel = document.getElementsByClassName('travelMode')[0].value;\n    let toll = Boolean(parseInt(document.getElementsByClassName('toll')[0].value));\n    let highway = Boolean(parseInt(document.getElementsByClassName('highway')[0].value));\n    service.getDistanceMatrix(\n      {\n        origins: nodes,\n        destinations: nodes,\n        travelMode: travel,\n        avoidHighways: toll,\n        avoidTolls: highway\n      }, parseOutput);\n\n    function parseOutput(response, status) {\n      destinations = [];\n      let error = false;\n      if (status == 'OK') {\n       for (let i = 0; i < response.rows.length; i++) {\n         let results = response.rows[i].elements;\n         let from = `${nodes[i].lat()},${nodes[i].lng()}`;\n         destinations.push(from);\n         tours[from] = {};\n         for (let j = 0; j < results.length; j++) {\n           if (i === j) { continue; }\n           let to = `${nodes[j].lat()},${nodes[j].lng()}`;\n           let element = results[j];\n           if (element.status === \"OK\") {\n             tours[from][to] = {};\n             tours[from][to][\"distance\"] = element.distance.value;\n             tours[from][to][\"duration\"] = element.duration.value;\n           } else {\n             alert(\"Invalid Location!\");\n             j = results.length;\n             i = results.length;\n             error = true;\n           }\n         }\n       }\n       destinations.push(destinations[0]);\n       if (callback && !error) {\n         callback(travel, toll, highway);\n       }\n      }\n    }\n  }\n\n  initMap();\n\n  let button = document.getElementsByClassName('start')[0];\n  button.addEventListener('click', (e) => {\n    e.preventDefault();\n    getDuration((travel, toll, highway) => {\n\n      if (directionsDisplay != null) {\n        directionsDisplay.setMap(null);\n        directionsDisplay = null;\n      }\n      let maxGen = parseInt(document.getElementsByClassName('generation')[0].value);\n      let ga = new GA(destinations, tours, maxGen, map);\n      ga.setup();\n      ga.draw((route) => {\n        directionsService = new google.maps.DirectionsService();\n        directionsDisplay = new google.maps.DirectionsRenderer();\n        directionsDisplay.setMap(map);\n        let waypts = [];\n\n        for (let i = 0; i < route.genes.length - 1; i++) {\n          waypts.push({\n            location: route.genes[i],\n            stopover: true\n          });\n        }\n        let request = {\n          origin: route.genes[0],\n          destination: route.genes[0],\n          waypoints: waypts,\n          travelMode: travel,\n          avoidHighways: highway,\n          avoidTolls: toll\n        };\n        directionsService.route(request, function(response, status) {\n          if (status === google.maps.DirectionsStatus.OK) {\n            clearMap();\n            directionsDisplay.setDirections(response);\n            let duration = document.getElementsByClassName('duration')[0];\n            let distance = document.getElementsByClassName('distance')[0];\n            duration.innerHTML = `Duration: ${displayTime(route.duration)}`;\n            distance.innerHTML = `Distance: ${convertToMiles(route.distance)} miles`;\n          } else{\n            alert('Error: couldn\\'t find a possible route from API');\n          }\n        });\n      });\n    });\n  });\n\n  function setMapOnAll(newMap) {\n    for (let i = 0; i < markers.length; i++) {\n      markers[i].setMap(newMap);\n    }\n  }\n\n  function clearMap() {\n    setMapOnAll(null);\n    markers = [];\n    nodes = [];\n    labelIndex = 0;\n  }\n\n  function displayTime(seconds) {\n    let minutes;\n    let hours;\n    let days;\n    let string = `${seconds} seconds`;\n    if (seconds > 59) {\n      minutes= Math.floor(seconds / 60);\n      seconds -= (minutes * 60);\n      string = `${minutes} minutes ${seconds} seconds`;\n    }\n    if (minutes > 59) {\n      hours = Math.floor(minutes / 60);\n      minutes -= (hours * 60);\n      string = `${hours} hours ${minutes} minutes`;\n    }\n\n    if (hours > 24) {\n      days = Math.floor(hours / 24);\n      hours -= (days * 24);\n      string = `${days} days ${hours} hours ${minutes} minutes`;\n    }\n    return string;\n  }\n\n  function convertToMiles(distance) {\n    return Math.round(distance*0.621371 / 1000).toFixed(2);\n  }\n\n  document.getElementsByClassName('clear')[0].addEventListener('click', e => {\n    e.preventDefault();\n    clearMap();\n    directionsDisplay.setMap(null);\n  });\n\n  document.getElementsByClassName('fa-info-circle')[0].addEventListener('click', e => {\n    let modal = document.getElementById('myModal');\n    modal.style.display = \"block\";\n\n    let close = document.getElementsByClassName(\"close\")[0];\n    close.onclick = function() {\n      modal.style.display = \"none\";\n    };\n\n    window.onclick = function(event) {\n      if (event.target == modal) {\n          modal.style.display = \"none\";\n      }\n    };\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/trip_planner.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}